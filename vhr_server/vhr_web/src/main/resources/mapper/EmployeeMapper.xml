<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiangzhiyan.vhr.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.jiangzhiyan.vhr.model.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="idCard" property="idCard" jdbcType="CHAR"/>
        <result column="wedlock" property="wedlock" jdbcType="CHAR"/>
        <result column="nationId" property="nationId" jdbcType="INTEGER"/>
        <result column="nativePlace" property="nativePlace" jdbcType="VARCHAR"/>
        <result column="politicId" property="politicId" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="departmentId" property="departmentId" jdbcType="INTEGER"/>
        <result column="jobLevelId" property="jobLevelId" jdbcType="INTEGER"/>
        <result column="posId" property="posId" jdbcType="INTEGER"/>
        <result column="engageForm" property="engageForm" jdbcType="VARCHAR"/>
        <result column="tiptopDegree" property="tiptopDegree" jdbcType="CHAR"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="beginDate" property="beginDate" jdbcType="DATE"/>
        <result column="workState" property="workState" jdbcType="CHAR"/>
        <result column="workID" property="workId" jdbcType="CHAR"/>
        <result column="contractTerm" property="contractTerm" jdbcType="DOUBLE"/>
        <result column="conversionTime" property="conversionTime" jdbcType="DATE"/>
        <result column="notWorkDate" property="notworkDate" jdbcType="DATE"/>
        <result column="beginContract" property="beginContract" jdbcType="DATE"/>
        <result column="endContract" property="endContract" jdbcType="DATE"/>
        <result column="workAge" property="workAge" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email,
        phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty,
        school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate,
        beginContract, endContract, workAge
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from employee
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.jiangzhiyan.vhr.model.Employee">
        insert into employee (id, name, gender,
                              birthday, idCard, wedlock, nationId,
                              nativePlace, politicId, email,
                              phone, address, departmentId,
                              jobLevelId, posId, engageForm,
                              tiptopDegree, specialty, school,
                              beginDate, workState, workID,
                              contractTerm, conversionTime, notWorkDate,
                              beginContract, endContract, workAge)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR},
                #{birthday,jdbcType=DATE}, #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR},
                #{nationId,jdbcType=INTEGER},
                #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
                #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
                #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR},
                #{tiptopDegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR},
                #{beginDate,jdbcType=DATE}, #{workState,jdbcType=CHAR}, #{workId,jdbcType=CHAR},
                #{contractTerm,jdbcType=DOUBLE}, #{conversionTime,jdbcType=DATE}, #{notworkDate,jdbcType=DATE},
                #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.jiangzhiyan.vhr.model.Employee">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="idCard != null">
                idCard,
            </if>
            <if test="wedlock != null">
                wedlock,
            </if>
            <if test="nationId != null">
                nationId,
            </if>
            <if test="nativePlace != null">
                nativePlace,
            </if>
            <if test="politicId != null">
                politicId,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="departmentId != null">
                departmentId,
            </if>
            <if test="jobLevelId != null">
                jobLevelId,
            </if>
            <if test="posId != null">
                posId,
            </if>
            <if test="engageForm != null">
                engageForm,
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree,
            </if>
            <if test="specialty != null">
                specialty,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="beginDate != null">
                beginDate,
            </if>
            <if test="workState != null">
                workState,
            </if>
            <if test="workId != null">
                workID,
            </if>
            <if test="contractTerm != null">
                contractTerm,
            </if>
            <if test="conversionTime != null">
                conversionTime,
            </if>
            <if test="notworkDate != null">
                notWorkDate,
            </if>
            <if test="beginContract != null">
                beginContract,
            </if>
            <if test="endContract != null">
                endContract,
            </if>
            <if test="workAge != null">
                workAge,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                #{workState,jdbcType=CHAR},
            </if>
            <if test="workId != null">
                #{workId,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notworkDate != null">
                #{notworkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                #{workAge,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jiangzhiyan.vhr.model.Employee">
        update employee
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                idCard = #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                wedlock = #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                nationId = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                nativePlace = #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                politicId = #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                departmentId = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                jobLevelId = #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                posId = #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                engageForm = #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                specialty = #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                beginDate = #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                workState = #{workState,jdbcType=CHAR},
            </if>
            <if test="workId != null">
                workID = #{workId,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                contractTerm = #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                conversionTime = #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notworkDate != null">
                notWorkDate = #{notworkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                beginContract = #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                endContract = #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                workAge = #{workAge,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jiangzhiyan.vhr.model.Employee">
        update employee
        set name           = #{name,jdbcType=VARCHAR},
            gender         = #{gender,jdbcType=CHAR},
            birthday       = #{birthday,jdbcType=DATE},
            idCard         = #{idCard,jdbcType=CHAR},
            wedlock        = #{wedlock,jdbcType=CHAR},
            nationId       = #{nationId,jdbcType=INTEGER},
            nativePlace    = #{nativePlace,jdbcType=VARCHAR},
            politicId      = #{politicId,jdbcType=INTEGER},
            email          = #{email,jdbcType=VARCHAR},
            phone          = #{phone,jdbcType=VARCHAR},
            address        = #{address,jdbcType=VARCHAR},
            departmentId   = #{departmentId,jdbcType=INTEGER},
            jobLevelId     = #{jobLevelId,jdbcType=INTEGER},
            posId          = #{posId,jdbcType=INTEGER},
            engageForm     = #{engageForm,jdbcType=VARCHAR},
            tiptopDegree   = #{tiptopDegree,jdbcType=CHAR},
            specialty      = #{specialty,jdbcType=VARCHAR},
            school         = #{school,jdbcType=VARCHAR},
            beginDate      = #{beginDate,jdbcType=DATE},
            workState      = #{workState,jdbcType=CHAR},
            workID         = #{workId,jdbcType=CHAR},
            contractTerm   = #{contractTerm,jdbcType=DOUBLE},
            conversionTime = #{conversionTime,jdbcType=DATE},
            notWorkDate    = #{notworkDate,jdbcType=DATE},
            beginContract  = #{beginContract,jdbcType=DATE},
            endContract    = #{endContract,jdbcType=DATE},
            workAge        = #{workAge,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--查询所有员工基本信息-->
    <resultMap id="allEmployees" type="com.jiangzhiyan.vhr.model.Employee" extends="BaseResultMap">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="nation" column="nation" jdbcType="VARCHAR"/>
        <result property="politic" column="politic" jdbcType="VARCHAR"/>
        <result property="department" column="department" jdbcType="VARCHAR"/>
        <result property="jobLevel" column="jobLevel" jdbcType="VARCHAR"/>
        <result property="position" column="position" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="queryAndPaged" resultMap="allEmployees">
        SELECT
        e.id, e.name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email,
        phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty,
        school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate,
        beginContract, endContract, workAge,
        n.NAME nation,
        p.NAME politic,
        d.NAME department,
        j.NAME jobLevel,
        pos.NAME position
        FROM
        employee e
        LEFT JOIN nation n ON e.nationId = n.id
        LEFT JOIN politicsstatus p ON e.politicId = p.id
        LEFT JOIN department d ON e.departmentId = d.id
        LEFT JOIN joblevel j ON e.jobLevelId = j.id
        LEFT JOIN position pos ON e.posId = pos.id
        <where>
            <if test="name != null and name != '' ">
                e.name like concat('%',#{name},'%')
            </if>
            <if test="phone != null and phone != '' ">
                and e.phone like concat('%',#{phone},'%')
            </if>
            <if test="politicId != null">
                and e.politicId = #{politicId}
            </if>
            <if test="nationId != null">
                and e.nationId = #{nationId}
            </if>
            <if test="posId != null">
                and e.posId = #{posId}
            </if>
            <if test="jobLevelId != null">
                and e.jobLevelId = #{jobLevelId}
            </if>
            <if test="engageForm != null and engageForm != '' ">
                and e.engageForm = #{engageForm}
            </if>
            <if test="departmentId != null">
                and e.departmentId = #{departmentId}
            </if>
            <if test="beginDateMin != null and beginDateMax != null">
                AND e.beginDate between #{beginDateMin} and #{beginDateMax}
            </if>
        </where>
        ORDER BY
        e.id
    </select>

    <!--批量删除员工信息-->
    <delete id="deleteBatch">
        delete from employee
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!--根据工号查询-->
    <select id="selectByWorkId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        where workID = #{workId}
    </select>

    <!--根据身份证号查询-->
    <select id="selectByIdCard" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        where idCard = #{idCard}
    </select>

    <!--查询当前最大工号-->
    <select id="selectMaxWorkId" resultType="java.lang.Integer">
        select max(workID)
        from employee
    </select>

    <!--查询所有员工信息-->
    <select id="selectAll" resultType="com.jiangzhiyan.vhr.model.Employee">
        SELECT workID,
               e.name,
               gender,
               birthday,
               idCard,
               wedlock,
               n.NAME   nation,
               nativePlace,
               p.NAME   politic,
               email,
               phone,
               address,
               d.NAME   department,
               j.NAME   jobLevel,
               pos.NAME position,
               engageForm,
               tiptopDegree,
               specialty,
               school,
               beginDate,
               workState,
               contractTerm,
               conversionTime,
               notWorkDate,
               beginContract,
               endContract,
               workAge
        FROM employee e
                 LEFT JOIN nation n ON e.nationId = n.id
                 LEFT JOIN politicsstatus p ON e.politicId = p.id
                 LEFT JOIN department d ON e.departmentId = d.id
                 LEFT JOIN joblevel j ON e.jobLevelId = j.id
                 LEFT JOIN position pos ON e.posId = pos.id
        ORDER BY e.id
    </select>

    <!--批量添加员工信息-->
    <insert id="insertBatch">
        insert into employee(<include refid="Base_Column_List"/>)
        values
        <foreach collection="models" item="emp" separator=",">
            (null,#{emp.name},#{emp.gender},#{emp.birthday},#{emp.idCard},#{emp.wedlock},#{emp.nationId},
            #{emp.nativePlace},
            #{emp.politicId},#{emp.email},#{emp.phone},#{emp.address},#{emp.departmentId},#{emp.jobLevelId},
            #{emp.posId},
            #{emp.engageForm},#{emp.tiptopDegree},#{emp.specialty},#{emp.school},#{emp.beginDate},#{emp.workState},
            #{emp.workId},#{emp.contractTerm},#{emp.conversionTime},#{emp.notWorkDate},
            #{emp.beginContract},#{emp.endContract},#{emp.workAge})
        </foreach>
    </insert>
</mapper>